#https://serverless.com/framework/docs/providers/aws/guide/serverless.yml

service: arweave-gateway

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'eu-west-2'}
  endpointType: regional
  memorySize: 512
  tracing:
    apiGateway: true
    lambda: true
  apiGateway:
    minimumCompressionSize: 1024
  logs:
    restApi: true
  stackTags:
    Service: ${self:service}
    Environment: ${opt:stage, 'dev'}
  deploymentBucket:
    name: ${self:service}-deployments-${self:provider.region}
    maxPreviousDeploymentArtifacts: 10
    blockPublicAccess: true
  environment:
    GATEWAY_ORIGINS: '["http://lon-1.eu-west-1.arweave.net:1984","http://lon-2.eu-west-1.arweave.net:1984","http://lon-3.eu-west-1.arweave.net:1984","http://lon-4.eu-west-1.arweave.net:1984","http://lon-5.eu-west-1.arweave.net:1984","http://lon-6.eu-west-1.arweave.net:1984"]'

plugins:
  - serverless-api-gateway-caching
  - serverless-domain-manager
  - serverless-stage-manager
  - serverless-deployment-bucket
  - serverless-offline

functions:
  arql:
    handler: dist/api/graphql.handler
    events:
      - http:
          path: graphql
          method: post
          cors:
            origin: "*"
            cacheControl: "public"
  graphql:
    handler: dist/api/graphql.handler
    events:
      - http:
          path: arql
          method: post
          cors:
            origin: "*"
            cacheControl: "public"
  api:
    handler: dist/api/index.handler
    events:
      - http:
          path: "{proxy+}"
          method: any
          cors:
            origin: "*"
            cacheControl: "public"
          request:
            parameters:
              paths:
                proxy: true
          caching:
            enabled: true
            cacheKeyParameters:
              - name: request.path.proxy
            perKeyInvalidation:
              requireAuthorization: true
              handleUnauthorizedRequests: Ignore

package:
  exclude:
    - terraform/**
  include:
    - dist/**

custom:
  stages:
    - dev
    - test
    - prod
  apiGatewayCaching:
    enabled: true
    clusterSize: "0.5"
    ttlInSeconds: 30
    dataEncrypted: false
    perKeyInvalidation:
      requireAuthorization: true
      handleUnauthorizedRequests: Ignore
  customDomain:
    domainName: ${file(serverless.${opt:stage, 'dev'}.yml):domain}
    stage: ${opt:stage, 'dev'}
    certificateName: ${file(serverless.${opt:stage, 'dev'}.yml):domain}
    certificateRegion: ${self:provider.region}
    createRoute53Record: false
    endpointType: regional
    securityPolicy: tls_1_2
    enabled: true
